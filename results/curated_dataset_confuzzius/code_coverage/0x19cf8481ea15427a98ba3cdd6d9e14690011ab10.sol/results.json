{"StandardToken": {"errors": {}, "generations": [{"generation": 0, "time": 0.19739508628845215, "total_transactions": 17, "unique_transactions": 16, "code_coverage": 79.02374670184696, "branch_coverage": 92.10526315789474}, {"generation": 1, "time": 0.7203562259674072, "total_transactions": 47, "unique_transactions": 31, "code_coverage": 90.50131926121372, "branch_coverage": 92.10526315789474}, {"generation": 2, "time": 1.9290649890899658, "total_transactions": 103, "unique_transactions": 47, "code_coverage": 90.50131926121372, "branch_coverage": 94.73684210526315}, {"generation": 3, "time": 3.309722423553467, "total_transactions": 165, "unique_transactions": 63, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 4, "time": 5.0661985874176025, "total_transactions": 227, "unique_transactions": 78, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 5, "time": 6.839337587356567, "total_transactions": 291, "unique_transactions": 94, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 6, "time": 8.507752180099487, "total_transactions": 355, "unique_transactions": 110, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 7, "time": 10.203435182571411, "total_transactions": 419, "unique_transactions": 125, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 8, "time": 12.007802724838257, "total_transactions": 483, "unique_transactions": 140, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 9, "time": 14.02770185470581, "total_transactions": 547, "unique_transactions": 156, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 10, "time": 16.154122829437256, "total_transactions": 611, "unique_transactions": 172, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 11, "time": 18.322792530059814, "total_transactions": 675, "unique_transactions": 187, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 12, "time": 20.39590811729431, "total_transactions": 739, "unique_transactions": 203, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 13, "time": 22.826911211013794, "total_transactions": 803, "unique_transactions": 216, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 14, "time": 24.993632555007935, "total_transactions": 867, "unique_transactions": 231, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 15, "time": 26.537334203720093, "total_transactions": 910, "unique_transactions": 259, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 16, "time": 29.13295030593872, "total_transactions": 964, "unique_transactions": 275, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 17, "time": 31.685465574264526, "total_transactions": 1025, "unique_transactions": 291, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 18, "time": 34.382272481918335, "total_transactions": 1088, "unique_transactions": 307, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 19, "time": 37.04189395904541, "total_transactions": 1152, "unique_transactions": 323, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 20, "time": 39.882139444351196, "total_transactions": 1216, "unique_transactions": 339, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 21, "time": 42.52011799812317, "total_transactions": 1280, "unique_transactions": 355, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 22, "time": 45.367852210998535, "total_transactions": 1344, "unique_transactions": 371, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 23, "time": 48.27919816970825, "total_transactions": 1408, "unique_transactions": 387, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 24, "time": 51.04489088058472, "total_transactions": 1472, "unique_transactions": 403, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 25, "time": 51.96927046775818, "total_transactions": 1515, "unique_transactions": 423, "code_coverage": 99.47229551451187, "branch_coverage": 94.73684210526315}, {"generation": 26, "time": 53.366666078567505, "total_transactions": 1579, "unique_transactions": 439, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 27, "time": 55.084182262420654, "total_transactions": 1639, "unique_transactions": 453, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 28, "time": 56.76455736160278, "total_transactions": 1703, "unique_transactions": 467, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 29, "time": 58.68030333518982, "total_transactions": 1767, "unique_transactions": 482, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 30, "time": 60.60081100463867, "total_transactions": 1827, "unique_transactions": 496, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 31, "time": 62.6402223110199, "total_transactions": 1891, "unique_transactions": 511, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 32, "time": 64.58354306221008, "total_transactions": 1955, "unique_transactions": 527, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 33, "time": 66.57064819335938, "total_transactions": 2019, "unique_transactions": 543, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 34, "time": 68.50316715240479, "total_transactions": 2083, "unique_transactions": 559, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 35, "time": 70.47387838363647, "total_transactions": 2147, "unique_transactions": 574, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 36, "time": 72.22715640068054, "total_transactions": 2211, "unique_transactions": 589, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 37, "time": 74.11998677253723, "total_transactions": 2275, "unique_transactions": 604, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 38, "time": 74.97061395645142, "total_transactions": 2318, "unique_transactions": 626, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 39, "time": 76.42787384986877, "total_transactions": 2372, "unique_transactions": 642, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 40, "time": 77.98642134666443, "total_transactions": 2421, "unique_transactions": 658, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 41, "time": 79.23913240432739, "total_transactions": 2469, "unique_transactions": 673, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 42, "time": 80.61825227737427, "total_transactions": 2517, "unique_transactions": 689, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 43, "time": 82.06726169586182, "total_transactions": 2565, "unique_transactions": 705, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 44, "time": 83.4059784412384, "total_transactions": 2610, "unique_transactions": 720, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 45, "time": 85.09187650680542, "total_transactions": 2658, "unique_transactions": 735, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 46, "time": 86.77131724357605, "total_transactions": 2706, "unique_transactions": 750, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 47, "time": 88.40415143966675, "total_transactions": 2754, "unique_transactions": 766, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 48, "time": 89.47716236114502, "total_transactions": 2799, "unique_transactions": 788, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 49, "time": 90.83418560028076, "total_transactions": 2855, "unique_transactions": 804, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 50, "time": 92.58164358139038, "total_transactions": 2917, "unique_transactions": 820, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 51, "time": 94.48933434486389, "total_transactions": 2979, "unique_transactions": 836, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 52, "time": 96.2646894454956, "total_transactions": 3043, "unique_transactions": 852, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 53, "time": 98.03167080879211, "total_transactions": 3107, "unique_transactions": 868, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 54, "time": 99.87275385856628, "total_transactions": 3171, "unique_transactions": 884, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 55, "time": 101.57217407226562, "total_transactions": 3235, "unique_transactions": 900, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 56, "time": 103.41294312477112, "total_transactions": 3299, "unique_transactions": 915, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 57, "time": 105.34289121627808, "total_transactions": 3363, "unique_transactions": 931, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 58, "time": 106.44586396217346, "total_transactions": 3406, "unique_transactions": 949, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 59, "time": 108.90465092658997, "total_transactions": 3460, "unique_transactions": 965, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 60, "time": 111.64410662651062, "total_transactions": 3518, "unique_transactions": 981, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 61, "time": 113.89346289634705, "total_transactions": 3575, "unique_transactions": 995, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 62, "time": 116.78966474533081, "total_transactions": 3641, "unique_transactions": 1011, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 63, "time": 120.03281569480896, "total_transactions": 3707, "unique_transactions": 1026, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 64, "time": 122.24878764152527, "total_transactions": 3773, "unique_transactions": 1040, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 65, "time": 124.31242609024048, "total_transactions": 3838, "unique_transactions": 1052, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 66, "time": 127.38706016540527, "total_transactions": 3918, "unique_transactions": 1068, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 67, "time": 130.08869576454163, "total_transactions": 3998, "unique_transactions": 1084, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 68, "time": 131.45215153694153, "total_transactions": 4045, "unique_transactions": 1109, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 69, "time": 133.2538924217224, "total_transactions": 4097, "unique_transactions": 1125, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 70, "time": 135.24074268341064, "total_transactions": 4159, "unique_transactions": 1141, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 71, "time": 137.4037926197052, "total_transactions": 4219, "unique_transactions": 1156, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 72, "time": 139.89929223060608, "total_transactions": 4281, "unique_transactions": 1171, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 73, "time": 141.94576334953308, "total_transactions": 4343, "unique_transactions": 1187, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 74, "time": 143.70343327522278, "total_transactions": 4401, "unique_transactions": 1203, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 75, "time": 145.98829650878906, "total_transactions": 4465, "unique_transactions": 1218, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 76, "time": 147.86467862129211, "total_transactions": 4529, "unique_transactions": 1234, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 77, "time": 150.1522114276886, "total_transactions": 4593, "unique_transactions": 1250, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 78, "time": 151.1662347316742, "total_transactions": 4635, "unique_transactions": 1268, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 79, "time": 153.0947504043579, "total_transactions": 4695, "unique_transactions": 1284, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 80, "time": 154.7529468536377, "total_transactions": 4759, "unique_transactions": 1300, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 81, "time": 157.18404364585876, "total_transactions": 4823, "unique_transactions": 1316, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 82, "time": 159.11925840377808, "total_transactions": 4887, "unique_transactions": 1332, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 83, "time": 160.81102538108826, "total_transactions": 4951, "unique_transactions": 1348, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 84, "time": 162.85426425933838, "total_transactions": 5015, "unique_transactions": 1364, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 85, "time": 164.98056983947754, "total_transactions": 5079, "unique_transactions": 1379, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 86, "time": 167.14364957809448, "total_transactions": 5143, "unique_transactions": 1395, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 87, "time": 169.3814651966095, "total_transactions": 5207, "unique_transactions": 1411, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 88, "time": 170.61113262176514, "total_transactions": 5254, "unique_transactions": 1429, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 89, "time": 173.35179924964905, "total_transactions": 5314, "unique_transactions": 1444, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 90, "time": 176.758202791214, "total_transactions": 5372, "unique_transactions": 1458, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 91, "time": 179.3904573917389, "total_transactions": 5436, "unique_transactions": 1474, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 92, "time": 182.59242272377014, "total_transactions": 5500, "unique_transactions": 1490, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 93, "time": 185.54480957984924, "total_transactions": 5564, "unique_transactions": 1506, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 94, "time": 188.5826518535614, "total_transactions": 5628, "unique_transactions": 1522, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}, {"generation": 95, "time": 191.5804545879364, "total_transactions": 5692, "unique_transactions": 1538, "code_coverage": 99.86807387862797, "branch_coverage": 97.36842105263158}], "transactions": {"total": 5692, "per_second": 29.708109271925483}, "code_coverage": {"percentage": 99.86807387862797, "covered": 757, "total": 758, "covered_with_children": 757, "total_with_children": 0}, "branch_coverage": {"percentage": 97.36842105263158, "covered": 37, "total": 38}, "execution_time": 191.59751796722412, "memory_consumption": 127.22265625, "address_under_test": "0x2c5e8a3b3aad9df32339409534e64dfcabcd3a65", "seed": 0.5759255841836879}, "daoPOLSKAtokens": {"errors": {"3193": [{"swc_id": 101, "severity": "High", "type": "Integer Overflow", "individual": [{"transaction": {"from": "0xcafebabecafebabecafebabecafebabecafebabe", "to": "0x2c5e8a3b3aad9df32339409534e64dfcabcd3a65", "value": 0, "gaslimit": 4500000, "data": "0x42af2478fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd"}, "block": {}, "global_state": {"call_return": {"null": null}, "extcodesize": {"null": null}}, "environment": {"returndatasize": {"null": null}}}], "time": 2.054739475250244, "line": 439, "column": 1, "source_code": "this.balance - SubX"}], "3603": [{"swc_id": 120, "severity": "Low", "type": "Block Dependency", "individual": [{"transaction": {"from": "0xcafebabecafebabecafebabecafebabecafebabe", "to": "0x2c5e8a3b3aad9df32339409534e64dfcabcd3a65", "value": 0, "gaslimit": 4500000, "data": "0x4bb278f3"}, "block": {}, "global_state": {"call_return": {"null": null}, "extcodesize": {"null": null}}, "environment": {"returndatasize": {"null": null}}}], "time": 2.309858798980713, "line": 458, "column": 1, "source_code": "block.number"}], "3700": [{"swc_id": 104, "severity": "Medium", "type": "Unchecked Return Value", "individual": [{"transaction": {"from": "0xcafebabecafebabecafebabecafebabecafebabe", "to": "0x2c5e8a3b3aad9df32339409534e64dfcabcd3a65", "value": 0, "gaslimit": 4500000, "data": "0x4bb278f3"}, "block": {}, "global_state": {"call_return": {"null": null}, "extcodesize": {"null": null}}, "environment": {"returndatasize": {"null": null}}}], "time": 2.3121871948242188, "line": 465, "column": 1, "source_code": "owner.send(this.balance)"}], "6241": [{"swc_id": 101, "severity": "High", "type": "Integer Overflow", "individual": [{"transaction": {"from": "0xcafebabecafebabecafebabecafebabecafebabe", "to": "0x2c5e8a3b3aad9df32339409534e64dfcabcd3a65", "value": 0, "gaslimit": 4500000, "data": "0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef90f065faa7e2fea22d3e10ecdad3ecebf5ad3cfb209bc4836681e4953cbc959600000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000001dc00000000000000000000000000000000000000000000000000000000000000"}, "block": {}, "global_state": {"call_return": {"null": null}, "extcodesize": {"null": null}}, "environment": {"returndatasize": {"null": null}}}, {"transaction": {"from": "0xcafebabecafebabecafebabecafebabecafebabe", "to": "0x2c5e8a3b3aad9df32339409534e64dfcabcd3a65", "value": 0, "gaslimit": 4500000, "data": "0x4eee966f0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000014100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002141414141414141414141414141414141414141414141414141414141414141414100000000000000000000000000000000000000000000000000000000000000"}, "block": {}, "global_state": {"call_return": {"null": null}, "extcodesize": {"null": null}}, "environment": {"returndatasize": {"null": null}}}, {"transaction": {"from": "0xcafebabecafebabecafebabecafebabecafebabe", "to": "0x2c5e8a3b3aad9df32339409534e64dfcabcd3a65", "value": 0, "gaslimit": 4500000, "data": "0x4eee966f000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000214141414141414141414141414141414141414141414141414141414141414141410000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}, "block": {}, "global_state": {"call_return": {"null": null}, "extcodesize": {"null": null}}, "environment": {"returndatasize": {"null": null}}}, {"transaction": {"from": "0xcafebabecafebabecafebabecafebabecafebabe", "to": "0x2c5e8a3b3aad9df32339409534e64dfcabcd3a65", "value": 0, "gaslimit": 4500000, "data": "0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}, "block": {}, "global_state": {"call_return": {"null": null}, "extcodesize": {"null": null}}, "environment": {"returndatasize": {"null": null}}}], "time": 22.74384307861328, "line": 151, "column": 1, "source_code": "contract daoPOLSKAtokens{\n\n    string public name = \"DAO POLSKA TOKEN version 1\";\n    string public symbol = \"DPL\";\n    uint8 public constant decimals = 18;  // 18 decimal places, the same as ETC/ETH/HEE.\n\n    // Receives \n    address public owner;\n    address public migrationMaster;\t\n    // The current total token supply.\n\n    uint256 public otherchainstotalsupply =1.0 ether;\n    uint256 public supplylimit      = 10000.0 ether;\n\t//totalSupply   \n   uint256 public  totalSupply      = 0.0 ether;\n\t//chains:\n\taddress public Chain1 = 0x0;\n\taddress public Chain2 = 0x0;\n\taddress public Chain3 = 0x0;\n\taddress public Chain4 = 0x0;\n\n\taddress public migrationAgent=0x8585D5A25b1FA2A0E6c3BcfC098195bac9789BE2;\n    uint256 public totalMigrated;\n\n\n    event Migrate(address indexed _from, address indexed _to, uint256 _value);\n    event Refund(address indexed _from, uint256 _value);\n\n\t\n\tstruct sendTokenAway{\n\t\tStandardToken coinContract;\n\t\tuint amount;\n\t\taddress recipient;\n\t}\n\tmapping(uint => sendTokenAway) transfers;\n\tuint numTransfers=0;\n\t\n  mapping (address => uint256) balances;\nmapping (address => uint256) balancesRAW;\n  mapping (address => mapping (address => uint256)) allowed;\n\n\tevent UpdatedTokenInformation(string newName, string newSymbol);\t\n \n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n\tevent receivedEther(address indexed _from,uint256 _value);\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n      // This notifies clients about the amount burnt\n    event Burn(address indexed from, uint256 value);\n  //tokenCreationCap\n  bool public supplylimitset = false;\n  bool public otherchainstotalset = false;\n   \n  function daoPOLSKAtokens() {\nowner=msg.sender;\nmigrationMaster=msg.sender;\n}\n\nfunction  setSupply(uint256 supplyLOCKER) public {\n    \t   if (msg.sender != owner) {\n      throw;\n    }\n\t\t    \t   if (supplylimitset != false) {\n      throw;\n    }\n\tsupplylimitset = true;\n  \n\tsupplylimit = supplyLOCKER ** uint256(decimals);\n//balances[owner]=supplylimit;\n  } \nfunction setotherchainstotalsupply(uint256 supplyLOCKER) public {\n    \t   if (msg.sender != owner) {\n      throw;\n    }\n\t    \t   if (supplylimitset != false) {\n      throw;\n    }\n\n\totherchainstotalset = true;\n\totherchainstotalsupply = supplyLOCKER ** uint256(decimals);\n\t\n  } \n    /**\n     * Set allowance for other address and notify\n     *\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\n     *\n     * @param _spender The address authorized to spend\n     * @param _value the max amount they can spend\n     * @param _extraData some extra information to send to the approved contract\n     */\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData)\n        public\n        returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n\n    /**\n     * Destroy tokens\n     *\n     * Remove `_value` tokens from the system irreversibly\n     *\n     * @param _value the amount of money to burn\n     */\n    function burn(uint256 _value) public returns (bool success) {\n        require(balances[msg.sender] >= _value);   // Check if the sender has enough\n        balances[msg.sender] -= _value;            // Subtract from the sender\n        totalSupply -= _value;                      // Updates totalSupply\n        Burn(msg.sender, _value);\n        return true;\n    }\n\n    /**\n     * Destroy tokens from other account\n     *\n     * Remove `_value` tokens from the system irreversibly on behalf of `_from`.\n     *\n     * @param _from the address of the sender\n     * @param _value the amount of money to burn\n     */\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\n        require(balances[_from] >= _value);                // Check if the targeted balance is enough\n        require(_value <= allowed[_from][msg.sender]);    // Check allowance\n        balances[_from] -= _value;                         // Subtract from the targeted balance\n        allowed[_from][msg.sender] -= _value;             // Subtract from the sender's allowance\n        totalSupply -= _value;                              // Update totalSupply\n        Burn(_from, _value);\n        return true;\n    }\n  \n  function transfer(address _to, uint256 _value) returns (bool success) {\n    //Default assumes totalSupply can't be over max (2^256 - 1).\n    //If your token leaves out totalSupply and can issue more tokens as time goes on, you need to check if it doesn't wrap.\n    //Replace the if with this one instead.\n    if (balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\n    //if (balances[msg.sender] >= _value && _value > 0) {\n      balances[msg.sender] -= _value;\n      balances[_to] += _value;\n      Transfer(msg.sender, _to, _value);\n      return true;\n    } else { return false; }\n  }\n\n  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\n    //same as above. Replace this line with the following if you want to protect against wrapping uints.\n    if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\n    //if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\n      balances[_to] += _value;\n      balances[_from] -= _value;\n      allowed[_from][msg.sender] -= _value;\n      Transfer(_from, _to, _value);\n      return true;\n    } else { return false; }\n  }\n\n  function balanceOf(address _owner) constant returns (uint256 balance) {\n    return balances[_owner];\n  }\n\n  function approve(address _spender, uint256 _value) returns (bool success) {\n    allowed[msg.sender][_spender] = _value;\n    Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\n    return allowed[_owner][_spender];\n  }\n\n\n\t\n\t    function () payable  public {\n\t\t if(funding){ \n        receivedEther(msg.sender, msg.value);\n\t\tbalances[msg.sender]=balances[msg.sender]+msg.value;\n\t\t} else throw;\n\t\t\n    }\n   \n\n\n\n\t\n  function setTokenInformation(string _name, string _symbol) {\n    \n\t   if (msg.sender != owner) {\n      throw;\n    }\n\tname = _name;\n    symbol = _symbol;\n\n    UpdatedTokenInformation(name, symbol);\n  }\n\nfunction setChainsAddresses(address chainAd, int chainnumber) {\n    \n\t   if (msg.sender != owner) {\n      throw;\n    }\n\tif(chainnumber==1){Chain1=chainAd;}\n\tif(chainnumber==2){Chain2=chainAd;}\n\tif(chainnumber==3){Chain3=chainAd;}\n\tif(chainnumber==4){Chain4=chainAd;}\t\t\n  } \n\n  function DAOPolskaTokenICOregulations() external returns(string wow) {\n\treturn 'Regulations of preICO and ICO are present at website  DAO Polska Token.network and by using this smartcontract and blockchains you commit that you accept and will follow those rules';\n}\n// if accidentally other token was donated to Project Dev\n\n\n\tfunction sendTokenAw(address StandardTokenAddress, address receiver, uint amount){\n\t\tif (msg.sender != owner) {\n\t\tthrow;\n\t\t}\n\t\tsendTokenAway t = transfers[numTransfers];\n\t\tt.coinContract = StandardToken(StandardTokenAddress);\n\t\tt.amount = amount;\n\t\tt.recipient = receiver;\n\t\tt.coinContract.transfer(receiver, amount);\n\t\tnumTransfers++;\n\t}\n\n     // Crowdfunding:\nuint public tokenCreationRate=1000;\nuint public bonusCreationRate=1000;\nuint public CreationRate=1761;\n   uint256 public constant oneweek = 36000;\nuint256 public fundingEndBlock = 5433616;\nbool public funding = true;\nbool public refundstate = false;\nbool public migratestate= false;\n        function createDaoPOLSKAtokens(address holder) payable {\n\n        if (!funding) throw;\n\n        // Do not allow creating 0 or more than the cap tokens.\n        if (msg.value == 0) throw;\n\t\t// check the maximum token creation cap\n        if (msg.value > (supplylimit - totalSupply) / CreationRate)\n          throw;\n\t\t\n\t\t//bonus structure\n// in early stage there is about 100% more details in ico regulations on website\n// price and converstion rate in tabled to PLN not ether, and is updated daily\n\n\n\n\t var numTokensRAW = msg.value;\n\n        var numTokens = msg.value * CreationRate;\n        totalSupply += numTokens;\n\n        // Assign new tokens to the sender\n        balances[holder] += numTokens;\n        balancesRAW[holder] += numTokensRAW;\n        // Log token creation event\n        Transfer(0, holder, numTokens);\n\t\t\n\t\t// Create additional Dao Tokens for the community and developers around 12%\n        uint256 percentOfTotal = 12;\n        uint256 additionalTokens = \tnumTokens * percentOfTotal / (100);\n\n        totalSupply += additionalTokens;\n\n        balances[migrationMaster] += additionalTokens;\n        Transfer(0, migrationMaster, additionalTokens);\n\t\n\t}\n\tfunction setBonusCreationRate(uint newRate){\n\tif(msg.sender == owner) {\n\tbonusCreationRate=newRate;\n\tCreationRate=tokenCreationRate+bonusCreationRate;\n\t}\n\t}\n\n    function FundsTransfer() external {\n\tif(funding==true) throw;\n\t\t \tif (!owner.send(this.balance)) throw;\n    }\n\t\n    function PartialFundsTransfer(uint SubX) external {\n\t      if (msg.sender != owner) throw;\n        // <yes> <report> UNCHECKED_LL_CALLS\n        owner.send(this.balance - SubX);\n\t}\n\tfunction turnrefund() external {\n\t      if (msg.sender != owner) throw;\n\trefundstate=!refundstate;\n        }\n\t\t\n\t\t\tfunction fundingState() external {\n\t      if (msg.sender != owner) throw;\n\tfunding=!funding;\n        }\n    function turnmigrate() external {\n\t      if (msg.sender != migrationMaster) throw;\n\tmigratestate=!migratestate;\n}\n\n    // notice Finalize crowdfunding clossing funding options\n\t\nfunction finalize() external {\n        if (block.number <= fundingEndBlock+8*oneweek) throw;\n        // Switch to Operational state. This is the only place this can happen.\n        funding = false;\t\n\t\trefundstate=!refundstate;\n        // Transfer ETH to theDAO Polska Token network Storage address.\n        if (msg.sender==owner)\n        // <yes> <report> UNCHECKED_LL_CALLS\n\t\towner.send(this.balance);\n    }\n    function migrate(uint256 _value) external {\n        // Abort if not in Operational Migration state.\n        if (migratestate) throw;\n\n\n        // Validate input value.\n        if (_value == 0) throw;\n        if (_value > balances[msg.sender]) throw;\n\n        balances[msg.sender] -= _value;\n        totalSupply -= _value;\n        totalMigrated += _value;\n        MigrationAgent(migrationAgent).migrateFrom(msg.sender, _value);\n        Migrate(msg.sender, migrationAgent, _value);\n    }\n\t\nfunction refundTRA() external {\n        // Abort if not in Funding Failure state.\n        if (funding) throw;\n        if (!refundstate) throw;\n\n        var DAOPLTokenValue = balances[msg.sender];\n        var ETHValue = balancesRAW[msg.sender];\n        if (ETHValue == 0) throw;\n        balancesRAW[msg.sender] = 0;\n        totalSupply -= DAOPLTokenValue;\n         \n        Refund(msg.sender, ETHValue);\n        msg.sender.transfer(ETHValue);\n}\n\nfunction preICOregulations() external returns(string wow) {\n\treturn 'Regulations of preICO are present at website  daopolska.pl and by using this smartcontract you commit that you accept and will follow those rules';\n}\n\n\n}"}]}, "generations": [{"generation": 0, "time": 2.4871397018432617, "total_transactions": 101, "unique_transactions": 100, "code_coverage": 71.4605734767025, "branch_coverage": 76.96969696969697}, {"generation": 1, "time": 8.30052661895752, "total_transactions": 257, "unique_transactions": 176, "code_coverage": 74.2831541218638, "branch_coverage": 80.0}, {"generation": 2, "time": 25.06872320175171, "total_transactions": 583, "unique_transactions": 263, "code_coverage": 78.78584229390681, "branch_coverage": 83.33333333333334}, {"generation": 3, "time": 44.987788915634155, "total_transactions": 913, "unique_transactions": 333, "code_coverage": 78.85304659498208, "branch_coverage": 84.24242424242424}, {"generation": 4, "time": 73.78203892707825, "total_transactions": 1282, "unique_transactions": 408, "code_coverage": 79.23387096774194, "branch_coverage": 84.54545454545455}, {"generation": 5, "time": 112.59995746612549, "total_transactions": 1653, "unique_transactions": 489, "code_coverage": 81.65322580645162, "branch_coverage": 85.15151515151516}, {"generation": 6, "time": 159.93181324005127, "total_transactions": 2034, "unique_transactions": 587, "code_coverage": 81.65322580645162, "branch_coverage": 85.15151515151516}, {"generation": 7, "time": 222.03673481941223, "total_transactions": 2386, "unique_transactions": 682, "code_coverage": 82.37007168458781, "branch_coverage": 85.75757575757575}], "transactions": {"total": 2386, "per_second": 10.74596894278069}, "code_coverage": {"percentage": 82.37007168458781, "covered": 3677, "total": 4464, "covered_with_children": 3677, "total_with_children": 0}, "branch_coverage": {"percentage": 85.75757575757575, "covered": 283, "total": 330}, "execution_time": 222.03674817085266, "memory_consumption": 134.16796875, "address_under_test": "0x2c5e8a3b3aad9df32339409534e64dfcabcd3a65", "seed": 0.5759255841836879}}